{"version":3,"sources":["Filebase/config.js","Filebase/Services.js","hook/useFirestore.js","context/AuthProvier.js","context/AppProvider.js","component/login/index.js","component/ChatRoom/Message.js","component/ChatRoom/ChatWindow.js","component/ChatRoom/UserInfo.js","component/ChatRoom/RoomList.js","component/ChatRoom/SideBar.js","component/ChatRoom/index.js","component/Modals/AddRoomModal.js","component/Modals/InviteMemberModal.js","component/login/SignUp.js","component/login/LoginWithPass.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","addDocument","collections","data","a","query","collection","addDoc","createdAt","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","useFirestore","collectionS","condition","React","useState","document","setDocument","useEffect","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AuthContext","createContext","AuthProvier","children","user","setUser","history","useNavigate","loading","setLoading","onAuthStateChanged","uid","email","photoURL","providerData","providerId","q","getDocs","then","Provider","value","AppContext","AppProvider","onSignUp","setOnSignUp","onLogin","setOnLogin","isAddRoomVisible","SetisAddRoomVisible","selectedRoomId","setSelectedRoomId","isInviteMemberVisible","setIsInviteMemberVisible","useContext","roomConditions","useMemo","rooms","selectedRoom","find","room","menberConditions","members","Title","Typography","fbProvider","FacebookAuthProvider","Login","handleLogin","signInWithPopup","_tokenResponse","isNewUser","providerID","keywords","toLowerCase","e","console","error","justify","style","height","span","textAlign","width","marginBottom","onClick","WrapperStyled","styled","div","formatDate","seconds","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","Message","text","size","src","className","marginRight","flexShrink","Text","display","flexDirection","HeaderStyled","ButtonGroupStyled","ContentStyled","FromStyled","Form","MessageListStyled","ChatWindow","inputRef","useRef","messageListRef","inputValue","setInputValue","useForm","form","handleOnsubmit","roomId","resetFields","current","setTimeout","focus","messagesDB","scrollTop","scrollHeight","description","icon","UserAddOutlined","type","Group","maxCount","member","title","ref","mes","color","colorMessage","Item","onChange","target","handleInputChange","onPressEnter","bordered","autoComplete","placeholder","message","showIcon","margin","memo","UserInfo","ghost","signOut","Panel","Collapse","PanelStyle","LinkStyle","Link","RoomList","defaultActiveKey","header","PlusSquareOutlined","SidebarStyles","SideBar","ChatRoom","AddRoomModal","visible","onOk","getFieldValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","use","limit","anc","arrAA","includes","InviteMemberModal","setValue","handleOk","roomRef","updateDoc","val","destroyOnClose","mode","newValue","SignUp","onFinish","password","username","createUserWithEmailAndPassword","catch","alert","rules","required","whitespace","prefix","UserOutlined","min","LockOutlined","dependencies","hasFeedback","validator","_","Promise","reject","Error","resolve","Password","shouldUpdate","htmlType","LoginWithPass","signInWithEmailAndPassword","userCredential","App","element","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ff93fdf2.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nimport { getAuth ,connectAuthEmulator} from \"firebase/auth\";\r\nimport { getFirestore,connectFirestoreEmulator } from \"firebase/firestore\"\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCMkE9L2Mu1PCh5dfDQXejgZQI-BUCcA_s\",\r\n  authDomain: \"chat-app-2-ca78a.firebaseapp.com\",\r\n  projectId: \"chat-app-2-ca78a\",\r\n  storageBucket: \"chat-app-2-ca78a.appspot.com\",\r\n  messagingSenderId: \"81901785324\",\r\n  appId: \"1:81901785324:web:2e828598a573fea29d15c9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst auth = getAuth(app);\r\nconst db = getFirestore()\r\n\r\n// connectAuthEmulator(auth,\"http://localhost:9099\")\r\n// if(window.location.hostname===\"localhost\"){\r\n\r\n//   connectFirestoreEmulator(db, 'localhost', 8080);\r\n// }\r\nexport {auth,db} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport {db} from './config'\r\nimport { collection, addDoc,serverTimestamp} from \"firebase/firestore\"; \r\n\r\n\r\nexport const addDocument = async (collections,data) =>{\r\n\r\n    const query = collection(db,collections)\r\n\r\n   await addDoc(query,{\r\n       ...data,\r\n       createdAt:serverTimestamp()\r\n   })\r\n   \r\n}\r\n\r\n\r\nexport const generateKeywords = (displayName) => {\r\n    // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n    // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n    const name = displayName.split(' ').filter((word) => word);\r\n  \r\n    const length = name.length;\r\n    let flagArray = [];\r\n    let result = [];\r\n    let stringArray = [];\r\n  \r\n    /**\r\n     * khoi tao mang flag false\r\n     * dung de danh dau xem gia tri\r\n     * tai vi tri nay da duoc su dung\r\n     * hay chua\r\n     **/\r\n    for (let i = 0; i < length; i++) {\r\n      flagArray[i] = false;\r\n    }\r\n  \r\n    const createKeywords = (name) => {\r\n      const arrName = [];\r\n      let curName = '';\r\n      name.split('').forEach((letter) => {\r\n        curName += letter;\r\n        arrName.push(curName);\r\n      });\r\n      return arrName;\r\n    };\r\n  \r\n    function findPermutation(k) {\r\n      for (let i = 0; i < length; i++) {\r\n        if (!flagArray[i]) {\r\n          flagArray[i] = true;\r\n          result[k] = name[i];\r\n  \r\n          if (k === length - 1) {\r\n            stringArray.push(result.join(' '));\r\n          }\r\n  \r\n          findPermutation(k + 1);\r\n          flagArray[i] = false;\r\n        }\r\n      }\r\n    }\r\n  \r\n    findPermutation(0);\r\n  \r\n    const keywords = stringArray.reduce((acc, cur) => {\r\n      const words = createKeywords(cur);\r\n      return [...acc, ...words];\r\n    }, []);\r\n  \r\n    return keywords;\r\n  };","import React from \"react\";\r\nimport { db } from \"../Filebase/config\";\r\nimport {\r\n  onSnapshot,\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\n\r\nconst useFirestore = (collectionS, condition) => {\r\n  const [document, setDocument] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let collectionRef = query(\r\n      collection(db, collectionS),\r\n      orderBy(\"createdAt\")\r\n    );\r\n\r\n    if (condition) {\r\n      if (!condition.compareValue || !condition.compareValue.length) {\r\n        return;\r\n      }\r\n      collectionRef = query(\r\n        collectionRef,\r\n        where(condition.fieldName, condition.operator, condition.compareValue)\r\n      );\r\n    }\r\n\r\n    const unsub = onSnapshot(collectionRef, (snapshot) => {\r\n      const data = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n\r\n      setDocument(data);\r\n    });\r\n\r\n    return unsub;\r\n  }, [collectionS, condition]);\r\n\r\n  return document;\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth ,db} from \"../Filebase/config\";\r\nimport { useState } from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nfunction AuthProvier({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const history = useNavigate();\r\n  const [ loading,setLoading] = useState(true);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n   auth.onAuthStateChanged((user) => {\r\n   \r\n\r\n     if (user) {\r\n          const { displayName, uid, email, photoURL} = user;\r\n          \r\n            if(user.providerData[0].providerId==='facebook.com'){\r\n              \r\n              setUser({\r\n                displayName,\r\n                uid,\r\n                email,\r\n                photoURL,\r\n                \r\n              })\r\n            }else{\r\n              const q = query(collection(db, \"users\"), where(\"uid\", \"==\", uid));\r\n              const querySnapshot =  getDocs(q);\r\n      \r\n              querySnapshot.then(docs => {\r\n                docs.forEach(doc => {\r\n                    const {displayName,uid,email,photoURL} = doc.data();\r\n                    setUser({\r\n                      displayName,\r\n                      email,\r\n                      photoURL,\r\n                      uid,\r\n                     });\r\n                     \r\n                     \r\n                    })\r\n                  })\r\n            }\r\n         \r\n\r\n          setLoading(false);\r\n          history(\"/\");\r\n    \r\n   \r\n      } else{\r\n        setLoading(false);\r\n          history(\"/login\");\r\n      }\r\n    });\r\n\r\n\r\n  }, [history]);\r\n\r\n      \r\n\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user,setUser }}>\r\n        \r\n        {loading ? <Spin></Spin> :children}\r\n        \r\n        </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvier;\r\n","import React from 'react'\r\nimport useFirestore from '../hook/useFirestore'\r\nimport {AuthContext} from \"./AuthProvier\"\r\n\r\nexport const AppContext = React.createContext()\r\n\r\nexport default function AppProvider({children}) {\r\n             const [onSignUp , setOnSignUp] = React.useState(false)\r\n             const [onLogin , setOnLogin] = React.useState(false)\r\n        const [isAddRoomVisible,SetisAddRoomVisible] = React.useState(false)\r\n        const [selectedRoomId,setSelectedRoomId] = React.useState('')\r\n        const [isInviteMemberVisible, setIsInviteMemberVisible] = React.useState(false);\r\n        \r\n\r\n    const {user} = React.useContext(AuthContext)\r\n\r\n    const roomConditions = React.useMemo(() => {\r\n        return {\r\n            fieldName:'members',\r\n            operator:'array-contains',\r\n            compareValue:user.uid\r\n        }\r\n    },[user.uid])\r\n\r\n    // const {rooms,selectedRoomId} = React.useContext(AppContext)\r\n  \r\n    const rooms = useFirestore('rooms' ,roomConditions)\r\n\r\n const selectedRoom =  React.useMemo(() => {\r\n     return rooms.find(room => room.id === selectedRoomId) || {}\r\n },[selectedRoomId,rooms])\r\n\r\n    const menberConditions = React.useMemo(() => {\r\n        return {\r\n            fieldName:'uid',\r\n            operator:'in',\r\n            compareValue:selectedRoom.members,\r\n        }\r\n    },[selectedRoom.members])\r\n\r\n    const members = useFirestore('users' , menberConditions)\r\n\r\n\r\n\r\n\r\n           \r\n            \r\n \r\n\r\n          \r\n    \r\n\r\n    return (\r\n        <AppContext.Provider value={{\r\n            rooms , isAddRoomVisible,SetisAddRoomVisible,selectedRoomId,\r\n            setSelectedRoomId,selectedRoom,members,\r\n            isInviteMemberVisible, setIsInviteMemberVisible,\r\n            onSignUp,setOnSignUp,onLogin,setOnLogin,\r\n            }}>\r\n                {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport { Row,Col,Button ,Typography} from 'antd'\r\nimport { signInWithPopup, FacebookAuthProvider}  from 'firebase/auth'\r\nimport { auth } from '../../Filebase/config'\r\nimport { addDocument,generateKeywords } from '../../Filebase/Services';\r\nimport { AppContext } from '../../context/AppProvider';\r\nconst {Title } = Typography\r\nconst fbProvider = new FacebookAuthProvider()\r\n \r\n  function Login() {\r\n\r\n      const handleLogin = async () => {\r\n        const {_tokenResponse,user}=  await signInWithPopup(auth,fbProvider)\r\n            \r\n                if(_tokenResponse?.isNewUser){\r\n                    try {\r\n                         addDocument('users' ,{\r\n\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            photoURL: user.photoURL,\r\n                            uid: user.uid,\r\n                            providerID: user.providerId,\r\n                            keywords: generateKeywords(user.displayName?.toLowerCase()),\r\n                            \r\n                        })  \r\n                      } catch (e) {\r\n                        console.error(\"Error adding document: \", e);\r\n                      }\r\n                }\r\n        }\r\n        const {setOnSignUp,setOnLogin} = useContext(AppContext)\r\n        const handleSignUp = () => {\r\n            setOnSignUp(true);\r\n        }\r\n        const handleLoginModal = () => {\r\n            setOnLogin(true);\r\n        }\r\n    return (\r\n        <div>\r\n         <Row justify=\"center\" style={{height:800}}>\r\n            <Col span={8}>\r\n                <Title style={{textAlign: 'center'}}>Login</Title>\r\n                <Button style={{width :'100%',marginBottom:5}}\r\n                    onClick={handleLogin}\r\n                >Đăng nhập bằng Facebook</Button>\r\n                <Button style={{width :'100%'}}>Đăng nhập bằng Google</Button>\r\n                <Button style={{width :'100%'}}\r\n                    onClick={handleSignUp}\r\n                >Đăng kí</Button>\r\n                     <Button style={{width :'100%'}}\r\n                    onClick={handleLoginModal}\r\n                >Đăng nhập</Button>\r\n            </Col>\r\n        </Row>\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { Avatar ,Typography } from 'antd'\r\nimport styled  from 'styled-components'\r\nimport { formatRelative } from 'date-fns/esm';\r\nconst WrapperStyled = styled.div`\r\n        margin-bottom: 12px;\r\n        padding: 4px;\r\n         padding-left: 12px;\r\n        display: flex;\r\n        border-bottom: 1px solid rgb(230, 230, 230);\r\n        .author{\r\n            color: #fff;\r\n            font-weight: bold;\r\n        }\r\n        .displayname{\r\n            margin-left: 5px;\r\n            font-weight: bold;\r\n            color: #fff;\r\n\r\n        }\r\n        .date{\r\n            margin-left: 10px;\r\n            font-size: 12px;\r\n            color: #000; \r\n        }\r\n        .content{\r\n            color: #fff;\r\n        }\r\n\r\n        .messageStyledchat{\r\n          background-color: \t#1890ff;\r\n            border-radius: 12px;\r\n            padding:6px;   \r\n        }\r\n     \r\n\r\n      \r\n\r\n`\r\n\r\nfunction formatDate(seconds) {\r\n    \r\n    let formattedDate = '';\r\n  \r\n    if (seconds) {\r\n      formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n  \r\n      formattedDate =\r\n        formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n    }\r\n  \r\n    return formattedDate;\r\n  }\r\n  export default    function Message({ text, displayName, createdAt, photoURL}) {\r\n   \r\n      \r\n    return (\r\n      <WrapperStyled>\r\n           <Avatar size=\"large\" src={photoURL} className=\"avt_mess\" style={{marginRight:12,flexShrink:0}}>\r\n            {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n        <div className=\"messageStyledchat\"   >\r\n         \r\n          <Typography.Text className='author'>{displayName}</Typography.Text>\r\n          <Typography.Text className='date'>\r\n            {formatDate(createdAt?.seconds)}\r\n          </Typography.Text>\r\n\r\n          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n          <Typography.Text className='content'>{text}</Typography.Text>\r\n          \r\n        </div>\r\n        </div>\r\n        \r\n        \r\n      </WrapperStyled>\r\n    );\r\n  }\r\n","import React, { memo ,useRef,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar, Button, Tooltip, Form, Input, Alert } from \"antd\";\r\nimport Message from './Message';\r\nimport { AuthContext } from \"../../context/AuthProvier\";\r\nimport { UserAddOutlined } from \"@ant-design/icons\";\r\nimport { AppContext } from \"../../context/AppProvider\";\r\nimport { addDocument } from \"../../Filebase/Services\";\r\nimport useFirestore from \"../../hook/useFirestore\"\r\n\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n      font-size: 20px;\r\n      \r\n    }\r\n    &__description {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst WrapperStyled = styled.div`\r\n  height: 100vh;\r\n`;\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px 12px 12px 0;\r\n  justify-content: flex-end;\r\n`;\r\nconst FromStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .ant-form-item:nth-child(2) {\r\n    flex: 0;\r\n    margin-bottom: 0;\r\n    cursor: pointer;\r\n    \r\n    .ant-form-item-control-input-content{\r\n        position: relative;\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\n\r\nfunction ChatWindow() {\r\n  const {\r\n    user: { uid, photoURL, displayName },\r\n  } = React.useContext(AuthContext);\r\n  const inputRef = useRef(null);\r\n  const messageListRef = useRef(null);\r\n\r\n\r\n  const { selectedRoom, members, setIsInviteMemberVisible } =\r\n    React.useContext(AppContext);\r\n\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n \r\n  const [form] = Form.useForm();\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n\r\n  const handleOnsubmit = async () => {\r\n  \r\n  \r\n\r\n   if(inputValue){\r\n    addDocument(\"messages\", {\r\n      text: inputValue,\r\n      uid,\r\n      photoURL,\r\n      roomId: selectedRoom.id,\r\n      displayName,\r\n      // colorMessage,\r\n    });\r\n   }\r\n   form.resetFields([\"messages\",\"img\"]);\r\n   \r\n   setInputValue('');\r\n  \r\n    if (inputRef?.current) {\r\n      setTimeout(() => {\r\n        inputRef.current.focus();\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n\r\n   \r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n             \r\n         \r\n\r\n\r\n\r\n  const condition = React.useMemo(\r\n    () => ({\r\n      fieldName: 'roomId',\r\n      operator: '==',\r\n      compareValue: selectedRoom.id,\r\n    }),\r\n    [selectedRoom.id]\r\n  );\r\n  const messagesDB = useFirestore('messages',condition) \r\n\r\n  useEffect(() => {\r\n    // scroll to bottom after message changed\r\n    if (messageListRef?.current) {\r\n      messageListRef.current.scrollTop =\r\n        messageListRef.current.scrollHeight + 50;\r\n    }\r\n  }, [messagesDB]);\r\n  return (\r\n    <WrapperStyled>\r\n      {selectedRoom.id ? (\r\n        <>\r\n          <HeaderStyled>\r\n            <div className=\"header__info\">\r\n              <p className=\"header__title\">{selectedRoom.name}</p>\r\n              <span className=\"header__desciption\">\r\n                {selectedRoom.description}\r\n              </span>\r\n            </div>\r\n            <ButtonGroupStyled>\r\n              <Button\r\n                icon={<UserAddOutlined />}\r\n                type=\"text\"\r\n                onClick={() => setIsInviteMemberVisible(true)}\r\n              >\r\n                Mời{\" \"}\r\n              </Button>\r\n\r\n              <Avatar.Group size=\"small\" maxCount={2}>\r\n                {members.map((member) => {\r\n                  return (\r\n                    <Tooltip title={member.displayName} key={member.id}>\r\n                      <Avatar src={member.photoURL}>\r\n                        {member.photoURL\r\n                          ? \"\"\r\n                          : member.displayName?.charAt(0).toUpperCase()}\r\n                      </Avatar>\r\n                    </Tooltip>\r\n                  );\r\n                })}\r\n              </Avatar.Group>\r\n            </ButtonGroupStyled>\r\n          </HeaderStyled>\r\n          <ContentStyled>\r\n            <MessageListStyled ref={messageListRef}>\r\n            {messagesDB.map((mes) => (\r\n                <Message\r\n                  key={mes.id}\r\n                  text={mes.text}\r\n                  photoURL={mes.photoURL}\r\n                  displayName={mes.displayName}\r\n                  createdAt={mes.createdAt}\r\n                  color={mes.colorMessage}\r\n                  \r\n                />\r\n              ))}\r\n            </MessageListStyled>\r\n\r\n            <FromStyled form={form}>\r\n              <Form.Item name=\"messages\">\r\n                <Input\r\n                   ref={inputRef}\r\n                  value={inputValue}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                  onPressEnter={handleOnsubmit}\r\n                  bordered={false}\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"nhập chat\"\r\n                ></Input>\r\n                  \r\n              \r\n              </Form.Item>\r\n\r\n              <Button type=\"primary\" onClick={handleOnsubmit}>\r\n                Gửi\r\n              </Button>\r\n            </FromStyled>\r\n          </ContentStyled>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Alert\r\n            message=\"hãy chọn phòng\"\r\n            type=\"info\"\r\n            showIcon\r\n            style={{ margin: 5 }}\r\n          />\r\n        </>\r\n      )}\r\n    </WrapperStyled>\r\n  );\r\n}\r\n\r\nexport default memo(ChatWindow);\r\n","import React from 'react'\r\nimport { Button,Avatar,Typography } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { auth } from '../../Filebase/config'\r\nimport {AuthContext } from \"../../context/AuthProvier\"\r\nconst WrapperStyled = styled.div`\r\n        display:flex;\r\n        justify-content:space-between;\r\n        padding:12px 16px;\r\n        border-bottom:1px solid #ccc;\r\n\r\n        .usermain{\r\n            display:flex;\r\n            align-items:center;\r\n        }\r\n        .username{\r\n            color:white;\r\n            margin-left:10px;\r\n        }\r\n\r\n`\r\n\r\n\r\n\r\nexport default function UserInfo() {\r\n    const {user} = React.useContext(AuthContext)\r\n      \r\n    return (\r\n        <WrapperStyled>\r\n            <div className=\"usermain\">\r\n                <Avatar src={user.photoURL}>{user.photoURL ? '' : user.displayName?.charAt(0)?.toUpperCase()}</Avatar>\r\n                <Typography.Text className=\"username\">{user.displayName}</Typography.Text>\r\n            </div>\r\n            <Button ghost onClick={( ) =>auth.signOut() }>sign out </Button>\r\n        </WrapperStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Collapse,Typography ,Button} from 'antd'\r\nimport styled from 'styled-components'\r\nimport {PlusSquareOutlined} from '@ant-design/icons'\r\nimport { AppContext } from '../../context/AppProvider'\r\n\r\nconst {Panel} = Collapse\r\n\r\nconst PanelStyle = styled(Panel)`\r\n &&& {\r\n     .ant-collapse-header {\r\n            color:white;\r\n     }\r\n     .ant-collapse-content-box{\r\n         padding : 0 40px;\r\n     } \r\n     .add-room{\r\n            color:  white;\r\n            padding: 0;\r\n     }\r\n   \r\n }\r\n`\r\n\r\nconst LinkStyle = styled(Typography.Link)`\r\n\r\n\r\n&&&{\r\n    display:block;\r\n            margin-bottom:12px;\r\n             color:#fff;\r\n             font-weight: bold;\r\n             border: 1px solid #fff;\r\n\r\n             \r\n            \r\n    }\r\n    :hover{\r\n        color:#000 !important;\r\n        }\r\n    \r\n`\r\n\r\nexport default function RoomList() {\r\n    \r\nconst {rooms,SetisAddRoomVisible,setSelectedRoomId}  = React.useContext(AppContext)\r\n\r\nconst handleAddRoom = ()=>{\r\nSetisAddRoomVisible(true)\r\n}\r\n    return (\r\n\r\n        <Collapse ghost defaultActiveKey={['1']}>\r\n            <PanelStyle header=\"Danh sách các phòng\" key=\"1\">\r\n               {\r\n                    rooms.map((room) =>{\r\n                        return (\r\n                            <LinkStyle key={room.id} \r\n                                onClick={() =>setSelectedRoomId(room.id)}\r\n                            >{room.name}</LinkStyle>\r\n                        )\r\n                    })\r\n\r\n               }\r\n                <Button type=\"text\" icon={<PlusSquareOutlined />} className=\"add-room\"\r\n                    onClick={handleAddRoom}\r\n                >Thêm Phòng</Button>\r\n            </PanelStyle>\r\n        </Collapse>\r\n    )\r\n}\r\n","import { Col, Row } from 'antd'\r\nimport React from 'react'\r\nimport UserInfo  from './UserInfo'\r\nimport RoomList  from './RoomList'\r\nimport styled from 'styled-components'\r\nconst SidebarStyles =  styled.div`\r\n        background:#1890ff;\r\n      \r\n        height:100vh;\r\n`;\r\n\r\nexport default function SideBar() {\r\n    return (\r\n        <SidebarStyles>\r\n\r\n        <Row>\r\n          <Col span={24}><UserInfo /></Col>\r\n          <Col span={24}><RoomList /></Col>\r\n        </Row>\r\n        </SidebarStyles>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ChatWindow from './ChatWindow'\r\nimport SideBar from './SideBar'\r\nimport { Row ,Col} from 'antd'\r\nfunction ChatRoom() {\r\n    return (\r\n        <Row>\r\n            <Col span={6}>\r\n            \r\n           <SideBar />\r\n            </Col> \r\n\r\n            <Col span={18}>\r\n           <ChatWindow />\r\n            \r\n             </ Col> \r\n           \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ChatRoom\r\n","import React from 'react'\r\nimport {Modal , Form,Input} from \"antd\"\r\nimport {AppContext} from \"../../context/AppProvider\"\r\nimport { addDocument } from '../../Filebase/Services';\r\nimport {AuthContext } from \"../../context/AuthProvier\"\r\nexport default function AddRoomModal() {\r\nconst {isAddRoomVisible,SetisAddRoomVisible} = React.useContext(AppContext)  \r\n\r\n    \r\n    const form = Form.useForm()\r\n  \r\n    const {user} = React.useContext(AuthContext)\r\n    const handleOk = ()=>{\r\n        // add new room to firestore \r\n        const {name,description} = form[0].getFieldValue()\r\n        addDocument('rooms', {\r\n                name,\r\n                description,\r\n                members:[user.uid]\r\n        })\r\n                form[0].resetFields()\r\n\r\n\r\n\r\n            SetisAddRoomVisible(false)\r\n\r\n    }\r\n\r\n    const handleCancel = ()=>{\r\n        form[0].resetFields()\r\n        SetisAddRoomVisible(false)\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <Modal\r\n                title='Tạo Phòng'\r\n                visible ={isAddRoomVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n            <Form form={form[0]} layout='vertical'>\r\n                <Form.Item label=\"Tên Phòng\" name=\"name\">\r\n                        <Input placeholder=\"nhập tên phòng\"/>\r\n                </Form.Item>\r\n                <Form.Item label=\"Mô tả\" name=\"description\">\r\n                        <Input.TextArea placeholder=\"nhập tên phòng\"/>\r\n                </Form.Item>\r\n            </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\r\nimport { AppContext } from '../../context/AppProvider';\r\nimport { debounce } from 'lodash';\r\nimport { db } from '../../Filebase/config';\r\nimport { collection,query,where,orderBy ,limit,getDocs,doc,updateDoc} from \"firebase/firestore\"\r\nfunction DebounceSelect({\r\n  fetchOptions,\r\n  debounceTimeout = 300,\r\n  curMembers,\r\n  ...props\r\n}) {\r\n  // Search: abcddassdfasdf\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceFetcher = React.useMemo(() => {\r\n    const loadOptions = (value) => {\r\n      setOptions([]);\r\n      setFetching(true);\r\n\r\n      fetchOptions(value, curMembers).then((newOptions) => {\r\n        setOptions(newOptions);\r\n        setFetching(false);\r\n      });\r\n    };\r\n\r\n    return debounce(loadOptions, debounceTimeout);\r\n  }, [debounceTimeout, fetchOptions, curMembers]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      // clear when unmount\r\n      setOptions([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size='small' /> : null}\r\n      {...props}\r\n    >\r\n      {options.map((opt) => (\r\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n          <Avatar size='small' src={opt.photoURL}>\r\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n          {` ${opt.label}`}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n///////////////////////////////\r\nasync function fetchUserList(search, curMembers) {\r\n  \r\n  const use = query(collection(db,'users'), where(\"keywords\", \"array-contains\", search?.toLowerCase()),limit(20),orderBy('displayName'))\r\n  const anc = await getDocs(use)\r\n  let arrAA = []\r\n      anc.forEach((doc) =>{\r\n\r\n         arrAA.push({\r\n          label: doc.data().displayName,\r\n          value: doc.data().uid,\r\n          photoURL: doc.data().photoURL,\r\n       })\r\n      })\r\n      \r\n      return arrAA.filter(opt => !curMembers.includes(opt.value))\r\n\r\n}\r\n\r\nexport default function InviteMemberModal() {\r\n  const {\r\n    isInviteMemberVisible,\r\n    setIsInviteMemberVisible,\r\n    selectedRoomId,\r\n    selectedRoom,\r\n  } = useContext(AppContext);\r\n  const [value, setValue] = useState([]);\r\n  const form= Form.useForm();\r\n\r\n  const handleOk = async () => {\r\n    // reset form value\r\n    form[0].resetFields();\r\n    setValue([]);\r\n\r\n    // update members in current room\r\n    const roomRef = doc(db, \"rooms\", selectedRoomId);\r\n    await updateDoc(roomRef, {\r\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\r\n    });\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form[0].resetFields();\r\n    setValue([]);\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Mời thêm thành viên'\r\n        visible={isInviteMemberVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form form={form[0]} layout='vertical'>\r\n          <DebounceSelect\r\n            mode='multiple'\r\n            name='search-user'\r\n            label='Tên các thành viên'\r\n            placeholder='Nhập tên thành viên'\r\n            style={{ width: '100%' }}\r\n            value={value}\r\n            fetchOptions={fetchUserList}\r\n            onChange={(newValue) => setValue(newValue)}\r\n            curMembers={selectedRoom.members}\r\n          />\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../Filebase/config\";\r\nimport { Modal, Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { AppContext } from \"../../context/AppProvider\";\r\nimport {addDocument,generateKeywords} from \"../../Filebase/Services\"\r\nimport {  AuthContext} from \"../../context/AuthProvier\"\r\n\r\n\r\n\r\nexport default function SignUp() {\r\n    \r\n    const {setUser} = React.useContext(AuthContext)\r\n  const { onSignUp, setOnSignUp } = useContext(AppContext);\r\n  const form = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    setOnSignUp(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOnSignUp(false);\r\n  };\r\n\r\n  const onFinish = async () => {\r\n      const {email, password,username} = form[0].getFieldValue()\r\n\r\n           createUserWithEmailAndPassword(auth, email, password).then((user) => {\r\n               const {user:{uid,}} = user\r\n              \r\n               addDocument('users' ,{\r\n                             displayName: username,\r\n                            email: email,\r\n                            photoURL: null,\r\n                            uid: uid,\r\n                            providerID: \"email/pass\",\r\n                            keywords: generateKeywords(username?.toLowerCase()),\r\n               })\r\n              \r\n               setUser({\r\n                displayName: username,\r\n                email: email,\r\n                photoURL: null,\r\n                uid: uid,\r\n                \r\n               });\r\n               \r\n               setOnSignUp(false)\r\n               form[0].resetFields()\r\n               \r\n             \r\n           })\r\n           .catch(error => {\r\n                alert(\"Tài khoản này  đã được đăng kí trước đó \")\r\n           })\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Đăng Kí Tài Khoản\"\r\n        visible={onSignUp}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form\r\n          form={form[0]}\r\n          layout=\"vertical\"\r\n          name=\"Sign Up\"\r\n          className=\"login-form\"\r\n          onFinish={onFinish}\r\n        >\r\n                <Form.Item\r\n        name=\"username\"\r\n        label=\"User Name\"\r\n        \r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your nickname!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n          <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n          <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n            />\r\n      </Form.Item>\r\n         \r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Password!\",\r\n              },{\r\n                  min:6,\r\n                  message: \"Password must be at least 6 characters \",\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n  \r\n\r\n          <Form.Item shouldUpdate>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Đăng kí\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport { auth,db } from \"../../Filebase/config\";\r\nimport { Modal, Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { AppContext } from \"../../context/AppProvider\";\r\nimport { AuthContext } from \"../../context/AuthProvier\";\r\nexport default function LoginWithPass() {\r\n  const { setUser } = React.useContext(AuthContext);\r\n  const { onLogin, setOnLogin } = useContext(AppContext);\r\n  const form = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    setOnLogin(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOnLogin(false);\r\n  };\r\n\r\n  const onFinish = async () => {\r\n    const { email, password } = form[0].getFieldValue();\r\n\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        const { user: { uid,}} = userCredential;\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", uid));\r\n        const querySnapshot =  getDocs(q);\r\n\r\n        querySnapshot.then(docs => {\r\n          docs.forEach(doc => {\r\n              const {displayName,uid,email,photoURL} = doc.data();\r\n              setUser({\r\n                displayName,\r\n                email,\r\n                photoURL,\r\n                uid,\r\n               });\r\n               \r\n               \r\n              })\r\n            })\r\n            setOnLogin(false)\r\n            form[0].resetFields()\r\n\r\n\r\n      \r\n      })\r\n      .catch((error) => {\r\n        alert(\"tài khoản hoặc mật khẩu không đúng\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Đăng Nhập\"\r\n        visible={onLogin}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form\r\n          form={form[0]}\r\n          layout=\"vertical\"\r\n          name=\"Login\"\r\n          className=\"login-form\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\",\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Password!\",\r\n              },\r\n              {\r\n                min: 6,\r\n                message: \"Password must be at least 6 characters \",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item shouldUpdate>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Đăng Nhập\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import Login from './component/login/index';\nimport ChatRoom from './component/ChatRoom/index';\nimport AddRoomModal from './component/Modals/AddRoomModal';\nimport InviteMemberModal from './component/Modals/InviteMemberModal';\nimport AuthProvier from './context/AuthProvier';\nimport AppProvider from './context/AppProvider';\nimport SignUp from './component/login/SignUp';\nimport LoginWithPass from './component/login/LoginWithPass';\nimport './App.css';\n\nimport {\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <AuthProvier>\n      <AppProvider>\n\n      <Routes>\n      <Route element={<Login />} path=\"/login\" /> \n        <Route element={<ChatRoom />} path=\"/\" /> \n\n      </Routes>\n    <InviteMemberModal/>\n      <AddRoomModal/>\n      <SignUp/>\n    <LoginWithPass/>\n\n      </AppProvider>\n    </AuthProvier>\n    \n\n    \n     \n    \n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter ,\n \n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}